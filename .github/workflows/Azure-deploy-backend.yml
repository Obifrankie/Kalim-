name: Deploy Backend to Azure 

on:
  push:
    branches:
      - main
    paths:
      - backend/**  # This ensures the pipeline runs when any file in the backend directory changes

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check server availability
        id: check-server
        run: |
          if ! ping -c 4 ${{ secrets.BACKEND_LB_PUB_IP }}; then
            echo "Backend Server not available please run the Azure-deploy-backend.yml pipeline"
            exit 1
          fi

      # Set up Docker CLI
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Login to Docker Hub 
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push Docker image for backend
      - name: Build and push backend Docker image
        env:
          TAG: ${{ github.sha }}
        run: | 
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ secrets.TAG }} -f backend/Dockerfile .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ secrets.TAG }}

      # SSH into backend VM instance and deploy the backend container
      - name: Deploy backend to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BACKEND_LB_PUB_IP }}
          username: ${{ secrets.VM_USERNAME }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          port: ${{ secrets.BACKEND_PORT }}
          script: |
            sudo docker stop backend || true
            sudo docker rm backend || true
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/backend:${{ secrets.TAG }}
            sudo docker run -d -p 8080:8080 --name backend ${{ secrets.DOCKER_USERNAME }}/backend:${{ secrets.TAG }}